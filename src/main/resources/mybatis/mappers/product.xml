<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="product">

	<!--메인 상품 게시물 총 개수 얻기  -->
	<select id="getMainTotalCount" resultType="java.lang.Integer">
	   <![CDATA[
	  select count(*) from product 
	    ]]>
	</select>
	
	<!-- 본사 상품 리스트 가져오기 -->
	<select id="getMainShopList" resultType="productvo">
		     <![CDATA[
select a.no,a.name,a.price,a.maker,a.kind_no,b.IMAGEURL from product a, boardsfilepr b 
where a.no=b.no
		     ]]>
	</select>
	
	<!-- 메인 게시물 상품 리스트 가져오기 -->
	<select id="getMainList" parameterType="map" resultType="productvo">
		     <![CDATA[
	select * from(
		select c.*,rownum rn from(
			select a.no,a.name,a.maker,a.price,a.KIND_NO,b.IMAGEURL from product a, boardsfilepr b where a.no=b.no order by a.PRICE asc) c)
	where #{page_start}<=rn and rn<=#{page_end}	
		     ]]>
	</select>
	
	<!-- 메인 게시물 검색 상품 리스트 가져오기 -->
	<select id="getMainListKeyword" parameterType="map" resultType="productvo">
		     <![CDATA[
	select * from(
		select c.*,rownum rn from(
			select a.no,a.name,a.maker,a.price,a.KIND_NO,b.IMAGEURL from product a, boardsfilepr b, PRODUCTKIND d where a.no=b.no 
      and d.no=a.kind_no and (a.NAME like #{keyword} or d.KIND like #{keyword})
			 order by a.PRICE desc) c)
	where #{page_start}<=rn and rn<=#{page_end}
		     ]]>
	</select>
	
	<!-- 메인 상품 등록 -->
	<insert id="insertMainBoard" parameterType="productvo">

		<selectKey resultType="java.lang.Long" keyProperty="no" order="BEFORE">
       	<![CDATA[
       		SELECT seq_product.nextVal as no FROM DUAL
       	]]>
		</selectKey>

	<![CDATA[	
			insert into product(
				no, name, price,maker,kind_no)
			values
			(
				#{no},
				#{name},
				#{price},
				#{maker},
				#{kind_no}
	
			)
		]]>
	</insert>
	
	<!--메인 상품 삭제 -->
	<delete id="deleteproduct" parameterType="java.lang.Long">
		<![CDATA[
		delete from product where no=#{no}
		]]>
	</delete>
	
	
	<!-- 서브 상품 게시물 총 개수 얻기 -->
	<select id="getTotalCount" parameterType="Long" resultType="java.lang.Integer">
	     <![CDATA[
	  select count(*) from storeproduct where STORE_NO=#{StoreNo}
	     ]]>
	</select>
	
	<!-- 서브게시물 상품 리스트 가져오기 -->
	<select id="getList" parameterType="map" resultType="storeproductvo">
   <![CDATA[
       select * from(
        select c.*,rownum rn from(
          select b.no,
                 c.name as storename,
                 a.name,
                 a.price,
                 a.maker,
                 to_char(b.reg_date,'yyyy/mm/dd') as reg_date,
                 to_char(b.EXPIRY_DATE,'yyyy/mm/dd') as expiry_date,
                 ceil(sysdate-b.reg_date) as newdate,
                 e.IMAGEURL,
                 ceil(b.expiry_date-sysdate) as remainderdate, 
                (ceil(((d.DIS_PERCENT*0.01)*a.price)/7)) countprice,
                a.price*0.5 as halfprice,
                b.count,
                b.mount,
                b.PRODUCT_NO,
                b.STORE_NO
          from product a, storeproduct b, store c, productkind d, boardsfilepr e
      where b.STORE_NO=#{store_no} and a.no=e.no and d.no=a.KIND_NO and a.no=b.PRODUCT_NO and c.no=b.STORE_NO
      and b.EXPIRY_DATE>sysdate
      order by a.price asc) c) where #{page_start}<=rn and rn<=#{page_end}
   ]]>
   </select>
   
     <!--서브 검색된 상품 게시물 리스트 가져오기  -->
   	<select id="getListKeyword" parameterType="map" resultType="storeproductvo">
   <![CDATA[
  	   select * from(
        select c.*,rownum rn from(
          select a.no,
                 c.name as storename,
                 a.name,
                 a.price,
                 a.maker,
                 to_char(b.reg_date,'yyyy/mm/dd') as reg_date,
                 to_char(b.EXPIRY_DATE,'yyyy/mm/dd') as expiry_date,
                 ceil(sysdate-b.reg_date) as newdate,
                 e.IMAGEURL,
                 ceil(b.expiry_date-sysdate) as remainderdate, 
                (ceil(((d.DIS_PERCENT*0.01)*a.price)/7)) countprice,
                a.price*0.5 as halfprice,
                b.count,
                b.mount,
                b.PRODUCT_NO,
                b.STORE_NO
          from product a, storeproduct b, store c, productkind d, boardsfilepr e
      where b.STORE_NO=#{store_no} and a.no=e.no and d.no=a.KIND_NO and a.no=b.PRODUCT_NO and c.no=b.STORE_NO
      and (a.NAME like #{keyword} or d.KIND like #{keyword})
      order by a.price asc) c) where #{page_start}<=rn and rn<=#{page_end}
   ]]>
   </select>


	<!-- 서브 상품 등록 -->
	<insert id="insertSubProduct" parameterType="storeproductvo">

	<![CDATA[	
	insert into storeproduct(
	no,store_no,product_no,reg_date,expiry_date,mount,count
	)
	 VALUES(
		seq_storeproduct.nextVal,#{store_no},#{product_no},#{reg_date},#{expiry_date},#{mount},1)
		]]>
	</insert>
	
	<!-- 서브 상품 삭제 -->
	<delete id="deleteSubProduct"  parameterType="map">
	<![CDATA[
	 delete from storeproduct where STORE_NO=#{store_no} and PRODUCT_NO=#{product_no}
	]]>
	</delete>
	
	
	<!--첨부파일 삽입  -->
	<insert id="insertAttachPrFile" parameterType="kr.ac.sungkyul.gs25.vo.AttachFilePrVo">
		<![CDATA[
			insert into boardsfilepr(
				fNO, no, path, orgName, saveName, fileSize,imageurl
			)
			values (
				seq_boardsfilepr.nextVal, #{no}, #{path}, #{orgName}, #{saveName},#{fileSize} ,#{imageurl}
			)
		]]>
	</insert>
	
	<!-- imageurl 정보 얻기 -->
	<select id="List" 
		resultType="kr.ac.sungkyul.gs25.vo.AttachFilePrVo">
			<![CDATA[
		select imageurl from boardsfilepr
			]]>
	</select>
	
	<!-- 상품 첨부파일 삭제 -->
	<delete id="deleteproductfile" parameterType="java.lang.Long">
	<![CDATA[
	delete from boardsfilepr where no=#{no}
	]]>
	</delete>
	
	<!-- 상품 서브리스트 (유통기한) -->
	<select id="getSubDate" parameterType="Long" resultType="storeproductvo">
		<![CDATA[
SELECT 
		c.no, 
		c.name,
		c.reg_date, 
		c.expiry_date, 
		c.maker, 
		c.IMAGEURL,
		c.countprice,
		c.price,
		c.maxcountprice,
		c.halfprice
from(                 
		select   	a.no, 
					a.name, 
					a.price, 
					b.reg_date, 
					ceil(b.expiry_date-sysdate) as expiry_date, 
					a.maker, 
					c.IMAGEURL,
          ((d.DIS_PERCENT*0.01)*a.price) as maxcountprice,
          (ceil(((d.DIS_PERCENT*0.01)*a.price)/7)) countprice,
          a.price*0.5 as halfprice 
from product a, storeproduct b, boardsfilepr c, productkind d
where a.no=b.PRODUCT_NO and 
      a.no=c.no and
      d.no=a.KIND_NO and
      b.STORE_NO=#{store_no} and
      b.expiry_date > sysdate ORDER BY b.expiry_date) c where expiry_date<=10 and rownum <5
		]]>
	</select>
	
	<!-- 상품 서브리스트 (신상품) -->
	<select id="getSubNew" parameterType="Long" resultType="storeproductvo">
		<![CDATA[
	      		 SELECT c.no,c.name, c.price, c.reg_date, c.expiry_date, c.maker, c.IMAGEURL 
		 FROM (SELECT a.no, a.name, a.price, d.reg_date, d.expiry_date, a.maker, b.IMAGEURL 
  		 FROM product a, boardsfilepr b, storeproduct d  where a.no=d.PRODUCT_NO and a.no = b.no and d.STORE_NO=#{store_no} 
  		 and d.expiry_date > sysdate
  		 ORDER BY reg_date desc) c WHERE rownum < 5
		]]>
	</select>
	
	<!-- 상품 서브리스트 (인기상품) -->
	<select id="getSubPopular" parameterType="Long" resultType="storeproductvo">
		<![CDATA[
       	 SELECT c.no,c.name, c.price, c.reg_date, c.expiry_date, c.maker, c.IMAGEURL,c.count
		 FROM (SELECT a.no, a.name, a.price, d.reg_date, d.expiry_date, a.maker, b.IMAGEURL,d.count 
  		 FROM product a, boardsfilepr b, storeproduct d  where a.no=d.product_no and a.no = b.no and d.store_no=#{store_no} 
  		 and d.expiry_date > sysdate
  		 ORDER BY count desc) c WHERE rownum < 5
		]]>
	</select>
	
	<!-- 상품 서브리스트 (랜덤추천) -->
	<select id="getSubReco" parameterType="Long" resultType="storeproductvo">
		<![CDATA[
		       		 SELECT c.no, c.name, c.price, c.reg_date, c.expiry_date, c.maker, c.IMAGEURL
  		 FROM(select a.no, a.name, a.price, d.reg_date, d.expiry_date, a.maker, b.IMAGEURL 
 		 FROM product a, boardsfilepr b, storeproduct d  where a.no=d.product_no and a.no = b.no and d.store_no=#{store_no}
 		  and d.expiry_date > sysdate
 		  order by DBMS_RANDOM.RANDOM) c WHERE rownum < 5
		]]>
	</select>
	
	<!--상품 조회수 증가  -->
	<update id="updateViewCount" parameterType="java.lang.Long">
		<![CDATA[
		update storeproduct set
		count = count + 1 where PRODUCT_NO=#{no}
					]]>
	</update>
	
	<!-- 상품 상세정보 -->
	<select id="searchproduct" parameterType="map" resultType="storeproductvo">
		<![CDATA[
		 SELECT d.no as no, 
		  		 a.name as name, 
		  		 a.price as price,  
		  		 to_char(d.expiry_date,'yyyy/mm/dd') as expiry_date, 
		  		 a.maker as maker, 
		  		 b.IMAGEURL as imageurl,
		  		 d.mount as mount,
      			 ceil((d.EXPIRY_DATE-sysdate)-7) as remainderdate,
      			 ceil(d.expiry_date-sysdate) as remaindercountdate,
      			 (ceil(((c.DIS_PERCENT*0.01)*a.price)/7)) as countprice,
                 a.price*0.5 as halfprice
		 	   FROM product a, boardsfilepr b, PRODUCTKIND c, storeproduct d
		 			where d.STORE_NO=#{store_no} and a.no = b.no and c.no=a.KIND_NO and a.no=d.PRODUCT_NO and d.no=#{no}
		]]>
	</select>
	
	<!-- 상품 1000원이하 랜덤 증정(출첵) -->
	<select id="random1000" parameterType="long" resultType="storeproductvo">
		<![CDATA[
		SELECT e.* from(
		SELECT c.*, d.name, d.price, d.maker, d.IMAGEURL 
		from (SELECT p.*, s.name as storename from storeproduct p, store s where p.STORE_NO = s.NO and s.NO=#{store_no}) c,
		(SELECT a.no, a.name, a.price, a.maker, b.IMAGEURL FROM product a, boardsfilepr b where a.no = b.no and a.price <= 1000) d
		where c.PRODUCT_NO= d.no  order by DBMS_RANDOM.RANDOM)e WHERE rownum < 2
		]]>
	</select>
	
	<!-- 상품 2000원이하 랜덤 증정(출첵) -->
	<select id="random2000" parameterType="long" resultType="storeproductvo">
		<![CDATA[
		SELECT e.* from(
		SELECT c.*, d.name, d.price, d.maker, d.IMAGEURL 
		from (SELECT p.*, s.name as storename from storeproduct p, store s where p.STORE_NO = s.NO and s.NO=#{store_no}) c,
		(SELECT a.no, a.name, a.price, a.maker, b.IMAGEURL FROM product a, boardsfilepr b where a.no = b.no and a.price <= 2000) d
		where c.PRODUCT_NO= d.no  order by DBMS_RANDOM.RANDOM)e WHERE rownum < 2
		]]>
	</select>
	
	<select id="maintainCheck" parameterType="cartvo" resultType="cartvo">
		<![CDATA[
		select * from cart 
		where user_no=#{user_no} and product_no=#{product_no}
		]]>
	</select>
	
	<!-- 매장 이름 정보 얻기 -->
	<select id="getStoreName" parameterType="Long" resultType="storeproductvo">
		<![CDATA[
		select name as storename from store where no=#{StoreNo}
		]]>
	</select>
	
	<!-- 매장 상품 삭제 -->
	<delete id="Storedelete" parameterType="Long">
		<![CDATA[
		delete from STOREPRODUCT where product_no=#{no}
		]]>
	</delete>
	
	<!-- 기프티콘에 쓰일 정보 가져오기 -->
	<select id="searchstoreproduct" parameterType="map" resultType="storeproductvo">
		<![CDATA[
		SELECT c.*, d.name, d.price, d.maker, d.IMAGEURL, d.ORGNAME 
		from (select p.*, s.name as storename from storeproduct p, store s where p.STORE_NO = s.NO and p.no=#{no} and s.NO= #{store_no} ) c,
		(SELECT a.no, a.name, a.price, a.maker, b.IMAGEURL, b.ORGNAME
		FROM product a, boardsfilepr b  where a.no = b.no) d where c.PRODUCT_NO= d.no
		]]>
	</select>
	
	<!-- 수량 감소  -->
	<update id="cutmount" parameterType="long">
		<![CDATA[
		update storeproduct set
		mount = mount - 1 where no = #{storeproduct_no}
		]]>
	</update>

</mapper>